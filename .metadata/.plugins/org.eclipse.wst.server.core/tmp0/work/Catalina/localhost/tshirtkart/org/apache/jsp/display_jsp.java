/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.74
 * Generated at: 2023-05-16 07:59:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.springframework.beans.factory.annotation.Autowired;
import com.tshirtkart.dao.OutputDao;
import com.tshirtkart.thread.ReadDetails;
import com.tshirtkart.entities.ProductDetails;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.TypedQuery;
import org.hibernate.Transaction;
import java.util.ArrayList;
import java.util.List;
import org.hibernate.SessionFactory;
import org.hibernate.Session;
import org.hibernate.cfg.Configuration;
import java.awt.Button;

public final class display_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.tshirtkart.thread.ReadDetails");
    _jspx_imports_classes.add("javax.persistence.criteria.CriteriaQuery");
    _jspx_imports_classes.add("org.hibernate.SessionFactory");
    _jspx_imports_classes.add("org.springframework.beans.factory.annotation.Autowired");
    _jspx_imports_classes.add("org.hibernate.Session");
    _jspx_imports_classes.add("javax.persistence.TypedQuery");
    _jspx_imports_classes.add("com.tshirtkart.entities.ProductDetails");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("java.awt.Button");
    _jspx_imports_classes.add("org.hibernate.Transaction");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("javax.persistence.criteria.CriteriaBuilder");
    _jspx_imports_classes.add("org.hibernate.cfg.Configuration");
    _jspx_imports_classes.add("com.tshirtkart.dao.OutputDao");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE web-app\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"product.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("@charset \"ISO-8859-1\";\r\n");
      out.write("\r\n");
      out.write("body{\r\n");
      out.write("	width:100%;\r\n");
      out.write("}\r\n");
      out.write(".form-control{\r\n");
      out.write("	width:30%;\r\n");
      out.write("	\r\n");
      out.write("}\r\n");
      out.write("form{\r\n");
      out.write("	padding :2%;\r\n");
      out.write("	\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("section{\r\n");
      out.write("	margin-top:3%;\r\n");
      out.write("}\r\n");
      out.write(".prohead{\r\n");
      out.write("	display:inline-block;\r\n");
      out.write("	margin-left:14%;\r\n");
      out.write("	padding:0;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<body>\r\n");

response.setHeader("Cache-Control", "no-cache, no-store, must-revalidate");
if(session.getAttribute("session")==null)
	response.sendRedirect("login.jsp");
	

      out.write("\r\n");
      out.write("<div class=\"row mx-auto d-flex justify-content-between\">\r\n");
      out.write("<div class=\"col-lg-10 d-flex justify-content-center\">\r\n");
      out.write("<h2 style=\"text-align: center; font-weight: bold;\" class=\"prohead\">Product Management Tool</h2>\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"col-lg-2\">\r\n");
      out.write("<div class=\"row mt-2\">\r\n");
      out.write("<div class=\"col-lg-7\">\r\n");
      out.write("<h5 style=\"text-align: center; font-weight: bold;\">Shruti </h5>\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"col-lg-5\">\r\n");
      out.write("<form action=\"logout\" method=\"post\">\r\n");
      out.write("<input type=\"submit\" value=\"Logout\" class=\"btn btn-danger\"></input>\r\n");
      out.write("</form>\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("<section>\r\n");
      out.write("\r\n");
      out.write("<form action=\"fetch\">\r\n");
      out.write("	<h4 style=\"font-weight: bold;\">Please Enter Product Details</h4>\r\n");
      out.write("  <div class=\"form-group row mb-2\">\r\n");
      out.write("    <label for=\"inputPassword\" class=\"col-sm-1 col-form-label\">Color</label>\r\n");
      out.write("    <div class=\"col-sm-10\">\r\n");
      out.write("      <input type=\"text\" class=\"form-control\"  placeholder=\"\" name=\"color\" required=\"required\">\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("  <div class=\"form-group row mb-2\">\r\n");
      out.write("    <label for=\"inputPassword\" class=\"col-sm-1 col-form-label\">Size</label>\r\n");
      out.write("    <div class=\"col-sm-10\">\r\n");
      out.write("      <input type=\"text\" class=\"form-control\"  placeholder=\"\" name=\"size\" required=\"required\">\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("  <div class=\"form-group row mb-2\">\r\n");
      out.write("    <label for=\"inputPassword\" class=\"col-sm-1 col-form-label\">Gender</label>\r\n");
      out.write("    <div class=\"col-sm-10\">\r\n");
      out.write("      <input type=\"text\" class=\"form-control\"  placeholder=\"\" name=\"gender\" required=\"required\">\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("    <div class=\"form-group row mb-2\">\r\n");
      out.write("    <label for=\"inputPassword\" class=\"col-sm-1 col-form-label\">Output preference</label>\r\n");
      out.write("    <div class=\"col-sm-10\">\r\n");
      out.write("      <input type=\"text\" class=\"form-control\"  placeholder=\"\" name=\"output\">\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("<input type=\"submit\" class=\"btn btn-primary\" name=\"sub\"></input>\r\n");
      out.write("</form>\r\n");
      out.write("</section>\r\n");
      out.write("<table class=\"w3-table-all\">\r\n");
      out.write("<thead>\r\n");
      out.write("<tr class=\"w3-green\">\r\n");
      out.write("<th>Id</th>\r\n");
      out.write("<th>Name</th>\r\n");
      out.write("<th>Color</th>\r\n");
      out.write("<th>Gender</th>\r\n");
      out.write("<th>Size</th>\r\n");
      out.write("<th>Price</th>\r\n");
      out.write("<th>Rating</th>\r\n");
      out.write("<th>Availability</th>\r\n");
      out.write("</tr>\r\n");
      out.write("</thead>\r\n");
      out.write("<tr>\r\n");


String x=request.getParameter("sub");
if(x!=null)
{

List<ProductDetails> li= new ArrayList<ProductDetails>();
li=OutputDao.getList();
if(li.size()!=0)
{
for(ProductDetails p:li)
{

      out.write("\r\n");
      out.write("<tr>\r\n");
      out.write("<td>");
      out.print(p.getId() );
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(p.getName() );
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(p.getColor() );
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(p.getGenderRecommendation() );
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(p.getSize() );
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(p.getPrice() );
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(p.getRating() );
      out.write("</td>\r\n");
      out.write("<td>");
      out.print(p.getAvailability() );
      out.write("</td>\r\n");
      out.write(" \r\n");


}
}
}

      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
